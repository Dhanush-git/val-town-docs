---
// This component adds a "Copy page" button with dropdown menu to documentation pages, to be used with LLMs
---

<div class="heading-container">
  <slot />
  <div id="copy-page-button-container" class="button-container">
    <div class="button-group">
      <button class="copy-button" aria-label="Copy page content">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1"></path></svg>
        <span>Copy page</span>
      </button>
      <button class="dropdown-toggle" aria-label="Show more options" aria-expanded="false">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 9l6 6 6-6"></path></svg>
      </button>
    </div>
    <div class="dropdown">
      <div class="dropdown-option copy-option">
        <div class="option-content">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1"></path></svg>
          <div class="option-text">
            <div>Copy page</div>
            <div class="option-description">Copy this page as Markdown for LLMs</div>
          </div>
        </div>
      </div>
      <div class="dropdown-option view-markdown-option">
        <div class="option-content">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline></svg>
          <div class="option-text">
            <div>View as Markdown <svg style="display: inline-block; vertical-align: -0.125em; margin-left: 4px;" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6"></path><path d="M15 3h6v6"></path><path d="M10 14L21 3"></path></svg></div>
            <div class="option-description">View this page as plain text</div>
          </div>
        </div>
      </div>
      <div class="dropdown-option chatgpt-option">
        <div class="option-content">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 48 48"><path fill="currentColor" d="M30.7,7.27L28.33,9.1c-1.605-2.067-4.068-3.209-6.697-3.092C17.313,6.2,14,9.953,14,14.277l0,9.143 l10.5,6.12l-1,1.72l-11.706-6.827C11.302,24.146,11,23.62,11,23.051l0-8.687C11,8.1,16.129,2.79,22.39,3.007 C25.669,3.12,28.68,4.663,30.7,7.27z"></path><path fill="currentColor" d="M12.861,9.833l0.4,2.967c-2.592,0.357-4.813,1.919-6.026,4.254c-1.994,3.837-0.4,8.582,3.345,10.745 l7.918,4.571l10.55-6.033l0.99,1.726l-11.765,6.724c-0.494,0.282-1.101,0.281-1.594-0.003l-7.523-4.343 C3.73,27.308,1.696,20.211,5.014,14.898C6.752,12.114,9.594,10.279,12.861,9.833z"></path><path fill="currentColor" d="M6.161,26.563l2.77,1.137c-0.987,2.423-0.745,5.128,0.671,7.346 c2.326,3.645,7.233,4.638,10.977,2.476l7.918-4.572l0.05-12.153l1.99,0.006l-0.059,13.551c-0.002,0.569-0.307,1.094-0.8,1.379 l-7.523,4.343c-5.425,3.132-12.588,1.345-15.531-4.185C5.083,32.994,4.914,29.616,6.161,26.563z"></path><path fill="currentColor" d="M17.3,40.73l2.37-1.83c1.605,2.067,4.068,3.209,6.697,3.092C30.687,41.8,34,38.047,34,33.723l0-9.143 l-10.5-6.12l1-1.72l11.706,6.827C36.698,23.854,37,24.38,37,24.949l0,8.687c0,6.264-5.13,11.574-11.39,11.358 C22.331,44.88,19.32,43.337,17.3,40.73z"></path><path fill="currentColor" d="M35.139,38.167l-0.4-2.967c2.592-0.357,4.813-1.919,6.026-4.254c1.994-3.837,0.4-8.582-3.345-10.745 l-7.918-4.571l-10.55,6.033l-0.99-1.726l11.765-6.724c0.494-0.282,1.101-0.281,1.594,0.003l7.523,4.343 c5.425,3.132,7.459,10.229,4.141,15.543C41.248,35.886,38.406,37.721,35.139,38.167z"></path><path fill="currentColor" d="M41.839,21.437l-2.77-1.137c0.987-2.423,0.745-5.128-0.671-7.346 c-2.326-3.645-7.233-4.638-10.977-2.476l-7.918,4.572l-0.05,12.153l-1.99-0.006l0.059-13.551c0.002-0.569,0.307-1.094,0.8-1.379 l7.523-4.343c5.425-3.132,12.588-1.345,15.531,4.185C42.917,15.006,43.086,18.384,41.839,21.437z"></path></svg>
          <div class="option-text">
            <div>Open in ChatGPT <svg style="display: inline-block; vertical-align: -0.125em; margin-left: 4px;" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6"></path><path d="M15 3h6v6"></path><path d="M10 14L21 3"></path></svg></div>
            <div class="option-description">Ask questions about this page</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Base styles */
  .heading-container {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    width: 100%;
    margin-bottom: 1rem;
  }

  .button-container {
    display: inline-flex;
    position: relative;
  }

  .button-group {
    display: flex;
    position: relative;
    border-radius: 6px;
    overflow: hidden;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  }

  .copy-button, .dropdown-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
    border: 1px solid var(--sl-color-gray-5, #e2e8f0);
    background-color: white;
    color: var(--sl-color-gray-12, #1a202c);
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    line-height: 1;
  }

  .copy-button {
    border-right: none;
    border-top-left-radius: 6px;
    border-bottom-left-radius: 6px;
    gap: 8px;
  }

  .dropdown-toggle {
    padding: 10px 8px;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
  }

  .dropdown {
    position: absolute;
    top: calc(100% + 4px);
    right: 0;
    width: 280px;
    background-color: white;
    border: 1px solid var(--sl-color-gray-5, #e2e8f0);
    border-radius: 6px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    z-index: 50;
    display: none;
  }

  .dropdown-option {
    padding: 10px 16px;
    cursor: pointer;
  }

  .dropdown-option:not(:last-child) {
    border-bottom: 1px solid var(--sl-color-gray-5, #e2e8f0);
  }

  .dropdown-option:hover {
    background-color: #f9f9f9;
  }

  .option-content {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .option-text {
    display: flex;
    flex-direction: column;
  }

  .option-description {
    font-size: 12px;
    opacity: 0.8;
  }

  /* Dark mode styles */
  :global(html[data-theme="dark"]) .copy-button,
  :global(html[data-theme="dark"]) .dropdown-toggle,
  :global(html.dark) .copy-button,
  :global(html.dark) .dropdown-toggle,
  :global(.dark) .copy-button,
  :global(.dark) .dropdown-toggle {
    background-color: #1e1e1e;
    color: #f3f4f6;
    border-color: #4b5563;
  }

  :global(html[data-theme="dark"]) .dropdown,
  :global(html.dark) .dropdown,
  :global(.dark) .dropdown {
    background-color: #1e1e1e;
    color: #f3f4f6;
    border-color: #4b5563;
  }

  :global(html[data-theme="dark"]) .dropdown-option:hover,
  :global(html.dark) .dropdown-option:hover,
  :global(.dark) .dropdown-option:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }
</style>

<script>
  // Initialize the copy page button functionality
  document.addEventListener('astro:page-load', () => {
    setupCopyPageButton();
  });

  // Also run on initial page load
  document.addEventListener('DOMContentLoaded', () => {
    setupCopyPageButton();
  });

  function setupCopyPageButton() {
    // Find the main heading and move it into our container
    const mainHeading = document.querySelector('main h1') || 
                        document.querySelector('article h1') || 
                        document.querySelector('.content h1') ||
                        document.querySelector('h1');
    
    if (!mainHeading) return;
    
    const headingContainer = document.querySelector('.heading-container');
    if (!headingContainer) return;
    
    // Get URL information
    const path = window.location.pathname;
    const normalizedPath = path.endsWith('/') ? path.slice(0, -1) : path;
    const mdUrl = normalizedPath === '' ? '/index.md' : normalizedPath + '.md';
    const fullUrl = window.location.origin + normalizedPath;
    
    // Create ChatGPT deep link with encoded URL
    const chatGptPrompt = "Read " + fullUrl + ".md so I can ask questions about it";
    const chatGptUrl = "https://chatgpt.com/?hints=search&q=" + encodeURIComponent(chatGptPrompt);
    
    // Set up event listeners
    const copyButton = document.querySelector('.copy-button');
    const dropdownToggle = document.querySelector('.dropdown-toggle');
    const dropdown = document.querySelector('.dropdown');
    const copyOption = document.querySelector('.copy-option');
    const viewMarkdownOption = document.querySelector('.view-markdown-option');
    const chatGptOption = document.querySelector('.chatgpt-option');
    
    if (!copyButton || !dropdownToggle || !dropdown || !copyOption || !viewMarkdownOption || !chatGptOption) return;
    
    // Move the heading into our container if it's not already there
    const currentParent = mainHeading.parentElement;
    if (currentParent !== headingContainer) {
      const headingParent = mainHeading.parentElement;
      headingParent.insertBefore(headingContainer, mainHeading);
      headingContainer.insertBefore(mainHeading, headingContainer.firstChild);
    }
    
    // Toggle dropdown
    dropdownToggle.addEventListener('click', (e) => {
      e.stopPropagation();
      const isExpanded = dropdown.style.display === 'block';
      dropdown.style.display = isExpanded ? 'none' : 'block';
      dropdownToggle.setAttribute('aria-expanded', !isExpanded);
    });
    
    // Close dropdown when clicking outside
    document.addEventListener('click', (event) => {
      if (!event.target.closest('.button-container')) {
        dropdown.style.display = 'none';
        dropdownToggle.setAttribute('aria-expanded', 'false');
      }
    });
    
    // Copy page content
    const copyHandler = createCopyHandler(copyButton, copyOption, mdUrl);
    copyButton.addEventListener('click', copyHandler);
    copyOption.addEventListener('click', copyHandler);
    
    // View as Markdown
    viewMarkdownOption.addEventListener('click', () => {
      window.open(mdUrl, '_blank');
    });
    
    // Open in ChatGPT
    chatGptOption.addEventListener('click', () => {
      window.open(chatGptUrl, '_blank');
    });
  }
  
  function createCopyHandler(copyButton, copyOption, mdUrl) {
    return function() {
      // Store original content
      const copyButtonContent = copyButton.innerHTML;
      const copyOptionContent = copyOption.querySelector('.option-content').innerHTML;
      
      // Show loading state
      copyButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="vertical-align: -0.125em;"><circle cx="12" cy="12" r="10"></circle><path d="M12 6v6l4 2"></path></svg>
        <span>Copying...</span>
      `;
      
      updateOptionContent(
        copyOption,
        `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="vertical-align: -0.125em;"><circle cx="12" cy="12" r="10"></circle><path d="M12 6v6l4 2"></path></svg>`,
        'Copying...',
        'Fetching page content'
      );
      
      // Fetch and copy the markdown
      fetch(mdUrl)
        .then(response => {
          if (!response.ok) throw new Error('Network response was not ok');
          return response.text();
        })
        .then(markdown => {
          return navigator.clipboard.writeText(markdown)
            .then(() => {
              // Success state
              copyButton.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="vertical-align: -0.125em;"><path d="M20 6L9 17l-5-5"></path></svg>
                <span>Copied!</span>
              `;
              
              updateOptionContent(
                copyOption,
                `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="vertical-align: -0.125em;"><path d="M20 6L9 17l-5-5"></path></svg>`,
                'Copied!',
                ''
              );
              
              setTimeout(() => {
                copyButton.innerHTML = copyButtonContent;
                copyOption.querySelector('.option-content').innerHTML = copyOptionContent;
                document.querySelector('.dropdown').style.display = 'none';
                document.querySelector('.dropdown-toggle').setAttribute('aria-expanded', 'false');
              }, 2000);
            });
        })
        .catch(() => {
          // Error state
          copyButton.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="vertical-align: -0.125em;"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg>
            <span>Failed to copy</span>
          `;
          
          updateOptionContent(
            copyOption,
            `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="vertical-align: -0.125em;"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg>`,
            'Failed to copy',
            'Please try again'
          );
          
          setTimeout(() => {
            copyButton.innerHTML = copyButtonContent;
            copyOption.querySelector('.option-content').innerHTML = copyOptionContent;
          }, 2000);
        });
    };
  }
  
  function updateOptionContent(option, iconHtml, title, description) {
    const content = option.querySelector('.option-content');
    content.innerHTML = `
      ${iconHtml}
      <div class="option-text">
        <div>${title}</div>
        <div class="option-description">${description}</div>
      </div>
    `;
  }
</script> 