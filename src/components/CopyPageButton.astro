---
// A "Copy page" button with dropdown menu for documentation pages
---

<copy-page-button>
  <div class="button-group">
    <button class="copy-button" aria-label="Copy page content">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1"></path></svg>
      <span>Copy page</span>
    </button>
    <button class="dropdown-toggle" aria-label="Show more options" aria-expanded="false">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 9l6 6 6-6"></path></svg>
    </button>
  </div>
  <div class="dropdown" hidden>
    <button class="dropdown-option copy-option">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1"></path></svg>
      <div>
        <div>Copy page</div>
        <div class="option-description">Copy this page as Markdown for LLMs</div>
      </div>
    </button>
    <a class="dropdown-option view-markdown-option">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline></svg>
      <div>
        <div class="with-external-icon">
          View as Markdown
          <svg class="external-icon" xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line></svg>
        </div>
        <div class="option-description">View this page as plain text</div>
      </div>
    </a>
    <button class="dropdown-option chatgpt-option">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 48 48"><path fill="currentColor" d="M30.7,7.27L28.33,9.1c-1.605-2.067-4.068-3.209-6.697-3.092C17.313,6.2,14,9.953,14,14.277l0,9.143 l10.5,6.12l-1,1.72l-11.706-6.827C11.302,24.146,11,23.62,11,23.051l0-8.687C11,8.1,16.129,2.79,22.39,3.007 C25.669,3.12,28.68,4.663,30.7,7.27z"></path><path fill="currentColor" d="M12.861,9.833l0.4,2.967c-2.592,0.357-4.813,1.919-6.026,4.254c-1.994,3.837-0.4,8.582,3.345,10.745 l7.918,4.571l10.55-6.033l0.99,1.726l-11.765,6.724c-0.494,0.282-1.101,0.281-1.594-0.003l-7.523-4.343 C3.73,27.308,1.696,20.211,5.014,14.898C6.752,12.114,9.594,10.279,12.861,9.833z"></path><path fill="currentColor" d="M6.161,26.563l2.77,1.137c-0.987,2.423-0.745,5.128,0.671,7.346 c2.326,3.645,7.233,4.638,10.977,2.476l7.918-4.572l0.05-12.153l1.99,0.006l-0.059,13.551c-0.002,0.569-0.307,1.094-0.8,1.379 l-7.523,4.343c-5.425,3.132-12.588,1.345-15.531-4.185C5.083,32.994,4.914,29.616,6.161,26.563z"></path><path fill="currentColor" d="M17.3,40.73l2.37-1.83c1.605,2.067,4.068,3.209,6.697,3.092C30.687,41.8,34,38.047,34,33.723l0-9.143 l-10.5-6.12l1-1.72l11.706,6.827C36.698,23.854,37,24.38,37,24.949l0,8.687c0,6.264-5.13,11.574-11.39,11.358 C22.331,44.88,19.32,43.337,17.3,40.73z"></path><path fill="currentColor" d="M35.139,38.167l-0.4-2.967c2.592-0.357,4.813-1.919,6.026-4.254c1.994-3.837,0.4-8.582-3.345-10.745 l-7.918-4.571l-10.55,6.033l-0.99-1.726l11.765-6.724c0.494-0.282,1.101-0.281,1.594,0.003l7.523,4.343 c5.425,3.132,7.459,10.229,4.141,15.543C41.248,35.886,38.406,37.721,35.139,38.167z"></path><path fill="currentColor" d="M41.839,21.437l-2.77-1.137c0.987-2.423,0.745-5.128-0.671-7.346 c-2.326-3.645-7.233-4.638-10.977-2.476l-7.918,4.572l-0.05,12.153l-1.99-0.006l0.059-13.551c0.002-0.569,0.307-1.094,0.8-1.379 l7.523-4.343c5.425-3.132,12.588-1.345,15.531,4.185C42.917,15.006,43.086,18.384,41.839,21.437z"></path></svg>
      <div>
        <div class="with-external-icon">
          Open in ChatGPT
          <svg class="external-icon" xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line></svg>
        </div>
        <div class="option-description">Ask questions about this page</div>
      </div>
    </button>
  </div>
</copy-page-button>

<style>
  copy-page-button {
    position: relative;
    display: inline-flex;
  }

  .button-group {
    display: flex;
    border-radius: 6px;
    overflow: hidden;
    box-shadow: 0 1px 2px var(--sl-shadow-sm);
  }

  .copy-button, .dropdown-toggle {
    display: flex;
    align-items: center;
    padding: 10px;
    border: 1px solid var(--sl-color-hairline);
    background-color: var(--sl-color-bg);
    color: var(--sl-color-text);
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
  }

  .copy-button {
    border-right: none;
    border-top-left-radius: 6px;
    border-bottom-left-radius: 6px;
    gap: 8px;
  }

  .dropdown-toggle {
    padding: 10px 8px;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
  }

  .dropdown {
    position: absolute;
    top: calc(100% + 4px);
    right: 0;
    width: 280px;
    background-color: var(--sl-color-bg);
    border: 1px solid var(--sl-color-hairline);
    border-radius: 6px;
    box-shadow: 0 2px 8px var(--sl-shadow-md);
    z-index: 10;
  }

  .dropdown[hidden] {
    display: none;
  }

  .dropdown-option {
    display: flex;
    align-items: center;
    width: 100%;
    padding: 12px;
    gap: 12px;
    border: none;
    background: none;
    text-align: left;
    cursor: pointer;
    color: var(--sl-color-text);
    text-decoration: none;
  }
  
  a.dropdown-option {
    color: var(--sl-color-text);
  }

  .dropdown-option:hover {
    background-color: var(--sl-color-gray-6);
  }

  .dropdown-option:not(:last-child) {
    border-bottom: 1px solid var(--sl-color-hairline);
  }

  .dropdown-option > div {
    display: flex;
    flex-direction: column;
  }

  .with-external-icon {
    display: flex;
    align-items: center;
    gap: 4px;
  }

  .external-icon {
    opacity: 0.7;
  }

  .option-description {
    font-size: 12px;
    color: var(--sl-color-text-2);
  }
</style>

<script>
  class CopyPageButton extends HTMLElement {
    connectedCallback() {
      // Elements
      const copyButton = this.querySelector('.copy-button');
      const dropdownToggle = this.querySelector('.dropdown-toggle');
      const dropdown = this.querySelector('.dropdown');
      const copyOption = this.querySelector('.copy-option');
      const markdownLink = this.querySelector('.view-markdown-option');
      const chatgptButton = this.querySelector('.chatgpt-option');
      
      if (!copyButton || !dropdown || !dropdownToggle) return;
      
      // Set up URLs
      const path = window.location.pathname.replace(/\/$/, '') || '/';
      const origin = window.location.origin;
      const mdUrl = `${path === '/' ? '' : path}.md`;
      const fullUrl = `${origin}${path}`;
      
      if (markdownLink) {
        markdownLink.href = `${origin}${mdUrl}`;
        markdownLink.target = '_blank';
        markdownLink.rel = 'noopener noreferrer';
      }
      
      // Handle ChatGPT button click
      if (chatgptButton) {
        chatgptButton.addEventListener('click', (e) => {
          e.preventDefault();
          // Create ChatGPT deep link with encoded URL
          const chatGptPrompt = "Read " + fullUrl + ".md so I can ask questions about it";
          const chatGptUrl = "https://chatgpt.com/?hints=search&q=" + encodeURIComponent(chatGptPrompt);
          window.open(chatGptUrl, '_blank');
          dropdown.setAttribute('hidden', '');
          dropdownToggle.setAttribute('aria-expanded', 'false');
        });
      }
      
      // Toggle dropdown
      dropdownToggle.addEventListener('click', (e) => {
        e.preventDefault();
        const isHidden = dropdown.hasAttribute('hidden');
        
        if (isHidden) {
          dropdown.removeAttribute('hidden');
          dropdownToggle.setAttribute('aria-expanded', 'true');
        } else {
          dropdown.setAttribute('hidden', '');
          dropdownToggle.setAttribute('aria-expanded', 'false');
        }
      });
      
      // Copy functionality
      const copyContent = async () => {
        try {
          const response = await fetch(`${origin}${mdUrl}`);
          if (!response.ok) throw new Error('Failed to fetch markdown');
          const text = await response.text();
          await navigator.clipboard.writeText(text);
          
          // Show success feedback
          const originalHtml = copyButton.innerHTML;
          copyButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6L9 17l-5-5"/></svg><span>Copied!</span>';
          
          setTimeout(() => {
            copyButton.innerHTML = originalHtml;
          }, 2000);
          
          // Close dropdown if open
          dropdown.setAttribute('hidden', '');
          dropdownToggle.setAttribute('aria-expanded', 'false');
        } catch (err) {
          // Show error feedback
          const originalHtml = copyButton.innerHTML;
          copyButton.innerHTML = '<span>Error</span>';
          
          setTimeout(() => {
            copyButton.innerHTML = originalHtml;
          }, 2000);
        }
      };
      
      // Add click handlers for copy buttons
      copyButton.addEventListener('click', () => copyContent());
      if (copyOption) {
        copyOption.addEventListener('click', () => copyContent());
      }
      
      // Close dropdown when clicking outside
      document.addEventListener('click', (e) => {
        if (!this.contains(e.target) && !dropdown.hasAttribute('hidden')) {
          dropdown.setAttribute('hidden', '');
          dropdownToggle.setAttribute('aria-expanded', 'false');
        }
      });
      
      // Close dropdown on Escape key
      this.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && !dropdown.hasAttribute('hidden')) {
          dropdown.setAttribute('hidden', '');
          dropdownToggle.setAttribute('aria-expanded', 'false');
          dropdownToggle.focus();
        }
      });
    }
  }
  
  customElements.define('copy-page-button', CopyPageButton);
</script>